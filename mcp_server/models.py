# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T02:04:00+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class GoogleAppsDriveLabelsV2betaDeleteLabelPermissionRequest(BaseModel):
    name: Optional[str] = Field(
        None, description='Required. Label Permission resource name.'
    )
    useAdminAccess: Optional[bool] = Field(
        None,
        description="Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
    )


class View(Enum):
    LABEL_VIEW_BASIC = 'LABEL_VIEW_BASIC'
    LABEL_VIEW_FULL = 'LABEL_VIEW_FULL'


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteFieldRequest(BaseModel):
    id: Optional[str] = Field(None, description='Required. ID of the Field to delete.')


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteSelectionChoiceRequest(
    BaseModel
):
    fieldId: Optional[str] = Field(
        None,
        description='Required. The Selection Field from which a Choice will be deleted.',
    )
    id: Optional[str] = Field(None, description='Required. Choice to delete.')


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableFieldRequest(BaseModel):
    id: Optional[str] = Field(None, description='Required. ID of the Field to enable.')


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableSelectionChoiceRequest(
    BaseModel
):
    fieldId: Optional[str] = Field(
        None,
        description='Required. The Selection Field in which a Choice will be enabled.',
    )
    id: Optional[str] = Field(None, description='Required. Choice to enable.')


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateFieldResponse(BaseModel):
    id: Optional[str] = Field(
        None,
        description='The field of the created field. When left blank in a create request, a key will be autogenerated and can be identified here.',
    )
    priority: Optional[int] = Field(
        None,
        description='The priority of the created field. The priority may change from what was specified to assure contiguous priorities between fields (1-n).',
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateSelectionChoiceResponse(
    BaseModel
):
    fieldId: Optional[str] = Field(
        None, description='The server-generated id of the field.'
    )
    id: Optional[str] = Field(
        None,
        description='The server-generated ID of the created choice within the Field',
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteFieldResponse(BaseModel):
    pass


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteSelectionChoiceResponse(
    BaseModel
):
    pass


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableFieldResponse(
    BaseModel
):
    pass


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableSelectionChoiceResponse(
    BaseModel
):
    pass


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableFieldResponse(BaseModel):
    pass


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableSelectionChoiceResponse(
    BaseModel
):
    pass


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldPropertiesResponse(
    BaseModel
):
    priority: Optional[int] = Field(
        None,
        description='The priority of the updated field. The priority may change from what was specified to assure contiguous priorities between fields (1-n).',
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldTypeResponse(
    BaseModel
):
    pass


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateLabelPropertiesResponse(
    BaseModel
):
    pass


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse(
    BaseModel
):
    priority: Optional[int] = Field(
        None,
        description='The priority of the updated choice. The priority may change from what was specified to assure contiguous priorities between choices (1-n).',
    )


class GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities(BaseModel):
    canRead: Optional[bool] = Field(
        None, description='Whether the user can read related applied metadata on items.'
    )
    canSearch: Optional[bool] = Field(
        None,
        description='Whether the user can search for Drive items referencing this field.',
    )
    canWrite: Optional[bool] = Field(
        None, description='Whether the user can set this field on Drive items.'
    )


class DateFormatType(Enum):
    DATE_FORMAT_UNSPECIFIED = 'DATE_FORMAT_UNSPECIFIED'
    LONG_DATE = 'LONG_DATE'
    SHORT_DATE = 'SHORT_DATE'


class GoogleAppsDriveLabelsV2betaFieldDisplayHints(BaseModel):
    disabled: Optional[bool] = Field(
        None, description='Whether the field should be shown in the UI as disabled.'
    )
    hiddenInSearch: Optional[bool] = Field(
        None,
        description='This field should be hidden in the search menu when searching for Drive items.',
    )
    required: Optional[bool] = Field(
        None, description='Whether the field should be shown as required in the UI.'
    )
    shownInApply: Optional[bool] = Field(
        None,
        description='This field should be shown in the apply menu when applying values to a Drive item.',
    )


class GoogleAppsDriveLabelsV2betaFieldIntegerOptions(BaseModel):
    maxValue: Optional[str] = Field(
        None, description='Output only. The maximum valid value for the integer field.'
    )
    minValue: Optional[str] = Field(
        None, description='Output only. The minimum valid value for the integer field.'
    )


class GoogleAppsDriveLabelsV2betaFieldListOptions(BaseModel):
    maxEntries: Optional[int] = Field(
        None, description='Maximum number of entries permitted.'
    )


class GoogleAppsDriveLabelsV2betaFieldLongTextOptions(BaseModel):
    maxLength: Optional[int] = Field(
        None,
        description='Output only. The maximum valid length of values for the text field.',
    )
    minLength: Optional[int] = Field(
        None,
        description='Output only. The minimum valid length of values for the text field.',
    )


class GoogleAppsDriveLabelsV2betaFieldProperties(BaseModel):
    displayName: Optional[str] = Field(
        None,
        description='Required. The display text to show in the UI identifying this field.',
    )
    insertBeforeField: Optional[str] = Field(
        None,
        description='Input only. Insert or move this field before the indicated field. If empty, the field is placed at the end of the list.',
    )
    required: Optional[bool] = Field(
        None, description='Whether the field should be marked as required.'
    )


class GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities(BaseModel):
    canDelete: Optional[bool] = Field(
        None,
        description='Whether the user can delete this field. The user must have permission and the field must be deprecated.',
    )
    canDisable: Optional[bool] = Field(
        None,
        description='Whether the user can disable this field. The user must have permission and this field must not already be disabled.',
    )
    canEnable: Optional[bool] = Field(
        None,
        description='Whether the user can enable this field. The user must have permission and this field must be disabled.',
    )
    canUpdate: Optional[bool] = Field(
        None, description='Whether the user can change this field.'
    )


class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities(
    BaseModel
):
    canRead: Optional[bool] = Field(
        None, description='Whether the user can read related applied metadata on items.'
    )
    canSearch: Optional[bool] = Field(
        None, description='Whether the user can use this choice in search queries.'
    )
    canSelect: Optional[bool] = Field(
        None, description='Whether the user can select this choice on an item.'
    )


class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities(
    BaseModel
):
    canDelete: Optional[bool] = Field(
        None, description='Whether the user can delete this choice.'
    )
    canDisable: Optional[bool] = Field(
        None, description='Whether the user can disable this choice.'
    )
    canEnable: Optional[bool] = Field(
        None, description='Whether the user can enable this choice.'
    )
    canUpdate: Optional[bool] = Field(
        None, description='Whether the user can update this choice.'
    )


class GoogleAppsDriveLabelsV2betaFieldTextOptions(BaseModel):
    maxLength: Optional[int] = Field(
        None,
        description='Output only. The maximum valid length of values for the text field.',
    )
    minLength: Optional[int] = Field(
        None,
        description='Output only. The minimum valid length of values for the text field.',
    )


class GoogleAppsDriveLabelsV2betaFieldUserOptions(BaseModel):
    listOptions: Optional[GoogleAppsDriveLabelsV2betaFieldListOptions] = Field(
        None,
        description='When specified, indicates that this field supports a list of values. Once the field is published, this cannot be changed.',
    )


class GoogleAppsDriveLabelsV2betaIntegerLimits(BaseModel):
    maxValue: Optional[str] = Field(
        None, description='Maximum value for an integer Field type.'
    )
    minValue: Optional[str] = Field(
        None, description='Minimum value for an integer Field type.'
    )


class LabelType(Enum):
    LABEL_TYPE_UNSPECIFIED = 'LABEL_TYPE_UNSPECIFIED'
    SHARED = 'SHARED'
    ADMIN = 'ADMIN'


class GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities(BaseModel):
    canApply: Optional[bool] = Field(
        None, description='Whether the user can apply this label to items.'
    )
    canRead: Optional[bool] = Field(
        None,
        description='Whether the user can read applied metadata related to this label.',
    )
    canRemove: Optional[bool] = Field(
        None, description='Whether the user can remove this label from items.'
    )


class CopyMode(Enum):
    COPY_MODE_UNSPECIFIED = 'COPY_MODE_UNSPECIFIED'
    DO_NOT_COPY = 'DO_NOT_COPY'
    ALWAYS_COPY = 'ALWAYS_COPY'
    COPY_APPLIABLE = 'COPY_APPLIABLE'


class GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy(BaseModel):
    copyMode: Optional[CopyMode] = Field(
        None,
        description='Indicates how the applied label and field values should be copied when a Drive item is copied.',
    )


class GoogleAppsDriveLabelsV2betaLabelDisplayHints(BaseModel):
    disabled: Optional[bool] = Field(
        None, description='Whether the label should be shown in the UI as disabled.'
    )
    hiddenInSearch: Optional[bool] = Field(
        None,
        description='This label should be hidden in the search menu when searching for Drive items.',
    )
    priority: Optional[str] = Field(
        None, description='Order to display label in a list.'
    )
    shownInApply: Optional[bool] = Field(
        None,
        description='This label should be shown in the apply menu when applying values to a Drive item.',
    )


class State(Enum):
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'


class GoogleAppsDriveLabelsV2betaLabelLockCapabilities(BaseModel):
    canViewPolicy: Optional[bool] = Field(
        None, description='True if the user is authorized to view the policy.'
    )


class Role(Enum):
    LABEL_ROLE_UNSPECIFIED = 'LABEL_ROLE_UNSPECIFIED'
    READER = 'READER'
    APPLIER = 'APPLIER'
    ORGANIZER = 'ORGANIZER'
    EDITOR = 'EDITOR'


class GoogleAppsDriveLabelsV2betaLabelPermission(BaseModel):
    audience: Optional[str] = Field(
        None,
        description='Audience to grant a role to. The magic value of `audiences/default` may be used to apply the role to the default audience in the context of the organization that owns the Label.',
    )
    email: Optional[str] = Field(
        None,
        description='Specifies the email address for a user or group pricinpal. Not populated for audience principals. User and Group permissions may only be inserted using email address. On update requests, if email address is specified, no principal should be specified.',
    )
    group: Optional[str] = Field(None, description='Group resource name.')
    name: Optional[str] = Field(None, description='Resource name of this permission.')
    person: Optional[str] = Field(None, description='Person resource name.')
    role: Optional[Role] = Field(
        None, description='The role the principal should have.'
    )


class GoogleAppsDriveLabelsV2betaLabelProperties(BaseModel):
    description: Optional[str] = Field(
        None, description='The description of the label.'
    )
    title: Optional[str] = Field(None, description='Required. Title of the label.')


class GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities(BaseModel):
    canDelete: Optional[bool] = Field(
        None,
        description='Whether the user can delete this label. The user must have permission and the label must be disabled.',
    )
    canDisable: Optional[bool] = Field(
        None,
        description='Whether the user can disable this label. The user must have permission and this label must not already be disabled.',
    )
    canEnable: Optional[bool] = Field(
        None,
        description='Whether the user can enable this label. The user must have permission and this label must be disabled.',
    )
    canUpdate: Optional[bool] = Field(
        None, description='Whether the user can change this label.'
    )


class State1(Enum):
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    UNPUBLISHED_DRAFT = 'UNPUBLISHED_DRAFT'
    PUBLISHED = 'PUBLISHED'
    DISABLED = 'DISABLED'
    DELETED = 'DELETED'


class GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy(BaseModel):
    hideInSearch: Optional[bool] = Field(
        None,
        description='Whether to hide this disabled object in the search menu for Drive items. * When `false`, the object is generally shown in the UI as disabled but it appears in the search results when searching for Drive items. * When `true`, the object is generally hidden in the UI when searching for Drive items.',
    )
    showInApply: Optional[bool] = Field(
        None,
        description='Whether to show this disabled object in the apply menu on Drive items. * When `true`, the object is generally shown in the UI as disabled and is unselectable. * When `false`, the object is generally hidden in the UI.',
    )


class GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse(BaseModel):
    labelPermissions: Optional[List[GoogleAppsDriveLabelsV2betaLabelPermission]] = (
        Field(None, description='Label permissions.')
    )
    nextPageToken: Optional[str] = Field(
        None, description='The token of the next page in the response.'
    )


class GoogleAppsDriveLabelsV2betaListLimits(BaseModel):
    maxEntries: Optional[int] = Field(
        None, description='Maximum number of values allowed for the Field type.'
    )


class GoogleAppsDriveLabelsV2betaLockStatus(BaseModel):
    locked: Optional[bool] = Field(
        None,
        description="Output only. Indicates whether this label component is the (direct) target of a LabelLock. A label component can be implicitly locked even if it's not the direct target of a LabelLock, in which case this field is set to false.",
    )


class GoogleAppsDriveLabelsV2betaLongTextLimits(BaseModel):
    maxLength: Optional[int] = Field(
        None, description='Maximum length allowed for a long text Field type.'
    )
    minLength: Optional[int] = Field(
        None, description='Minimum length allowed for a long text Field type.'
    )


class GoogleAppsDriveLabelsV2betaSelectionLimits(BaseModel):
    listLimits: Optional[GoogleAppsDriveLabelsV2betaListLimits] = Field(
        None, description='Limits for list-variant of a Field type.'
    )
    maxChoices: Optional[int] = Field(None, description='The max number of choices.')
    maxDeletedChoices: Optional[int] = Field(
        None, description='Maximum number of deleted choices.'
    )
    maxDisplayNameLength: Optional[int] = Field(
        None, description='Maximum length for display name.'
    )
    maxIdLength: Optional[int] = Field(
        None, description='Maximum ID length for a selection options.'
    )


class GoogleAppsDriveLabelsV2betaTextLimits(BaseModel):
    maxLength: Optional[int] = Field(
        None, description='Maximum length allowed for a text Field type.'
    )
    minLength: Optional[int] = Field(
        None, description='Minimum length allowed for a text Field type.'
    )


class GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest(BaseModel):
    copyMode: Optional[CopyMode] = Field(
        None,
        description='Required. Indicates how the applied Label, and Field values should be copied when a Drive item is copied.',
    )
    languageCode: Optional[str] = Field(
        None,
        description='The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.',
    )
    useAdminAccess: Optional[bool] = Field(
        None,
        description="Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
    )
    view: Optional[View] = Field(
        None,
        description='When specified, only certain fields belonging to the indicated view will be returned.',
    )


class GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest(BaseModel):
    labelPermission: Optional[GoogleAppsDriveLabelsV2betaLabelPermission] = Field(
        None, description='Required. The permission to create or update on the Label.'
    )
    parent: Optional[str] = Field(
        None, description='Required. The parent Label resource name.'
    )
    useAdminAccess: Optional[bool] = Field(
        None,
        description="Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
    )


class GoogleAppsDriveLabelsV2betaUserCapabilities(BaseModel):
    canAccessLabelManager: Optional[bool] = Field(
        None,
        description='Output only. Whether the user is allowed access to the label manager.',
    )
    canAdministrateLabels: Optional[bool] = Field(
        None,
        description='Output only. Whether the user is an administrator for the shared labels feature.',
    )
    canCreateAdminLabels: Optional[bool] = Field(
        None,
        description='Output only. Whether the user is allowed to create new admin labels.',
    )
    canCreateSharedLabels: Optional[bool] = Field(
        None,
        description='Output only. Whether the user is allowed to create new shared labels.',
    )
    name: Optional[str] = Field(
        None, description='Output only. Resource name for the user capabilities.'
    )


class GoogleAppsDriveLabelsV2betaUserInfo(BaseModel):
    person: Optional[str] = Field(
        None,
        description='The identifier for this user that can be used with the People API to get more information. For example, people/12345678.',
    )


class GoogleAppsDriveLabelsV2betaUserLimits(BaseModel):
    listLimits: Optional[GoogleAppsDriveLabelsV2betaListLimits] = Field(
        None, description='Limits for list-variant of a Field type.'
    )


class GoogleAppsDriveLabelsV2betaWriteControl(BaseModel):
    requiredRevisionId: Optional[str] = Field(
        None,
        description='The revision_id of the label that the write request will be applied to. If this is not the latest revision of the label, the request will not be processed and will return a 400 Bad Request error.',
    )


class GoogleProtobufEmpty(BaseModel):
    pass


class GoogleTypeColor(BaseModel):
    alpha: Optional[float] = Field(
        None,
        description='The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).',
    )
    blue: Optional[float] = Field(
        None,
        description='The amount of blue in the color as a value in the interval [0, 1].',
    )
    green: Optional[float] = Field(
        None,
        description='The amount of green in the color as a value in the interval [0, 1].',
    )
    red: Optional[float] = Field(
        None,
        description='The amount of red in the color as a value in the interval [0, 1].',
    )


class GoogleTypeDate(BaseModel):
    day: Optional[int] = Field(
        None,
        description="Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
    )
    month: Optional[int] = Field(
        None,
        description='Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.',
    )
    year: Optional[int] = Field(
        None,
        description='Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.',
    )


class MinimumRole(Enum):
    LABEL_ROLE_UNSPECIFIED = 'LABEL_ROLE_UNSPECIFIED'
    READER = 'READER'
    APPLIER = 'APPLIER'
    ORGANIZER = 'ORGANIZER'
    EDITOR = 'EDITOR'


class FieldXgafv(Enum):
    field_1 = '1'
    field_2 = '2'


class Alt(Enum):
    json = 'json'
    media = 'media'
    proto = 'proto'


class GoogleAppsDriveLabelsV2betaBadgeColors(BaseModel):
    backgroundColor: Optional[GoogleTypeColor] = Field(
        None,
        description='Output only. Badge background that pairs with the foreground.',
    )
    foregroundColor: Optional[GoogleTypeColor] = Field(
        None,
        description='Output only. Badge foreground that pairs with the background.',
    )
    soloColor: Optional[GoogleTypeColor] = Field(
        None,
        description='Output only. Color that can be used for text without a background.',
    )


class GoogleAppsDriveLabelsV2betaBadgeConfig(BaseModel):
    color: Optional[GoogleTypeColor] = Field(
        None,
        description='The color of the badge. When not specified, no badge is rendered. The background, foreground, and solo (light and dark mode) colors set here are changed in the Drive UI into the closest recommended supported color.',
    )
    priorityOverride: Optional[str] = Field(
        None,
        description='Override the default global priority of this badge. When set to 0, the default priority heuristic is used.',
    )


class GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest(BaseModel):
    requests: Optional[
        List[GoogleAppsDriveLabelsV2betaDeleteLabelPermissionRequest]
    ] = Field(
        None,
        description='Required. The request message specifying the resources to update.',
    )
    useAdminAccess: Optional[bool] = Field(
        None,
        description="Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access. If this is set, the use_admin_access field in the DeleteLabelPermissionRequest messages must either be empty or match this field.",
    )


class GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest(BaseModel):
    requests: Optional[
        List[GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest]
    ] = Field(
        None,
        description='Required. The request message specifying the resources to update.',
    )
    useAdminAccess: Optional[bool] = Field(
        None,
        description="Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access. If this is set, the use_admin_access field in the UpdateLabelPermissionRequest messages must either be empty or match this field.",
    )


class GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse(BaseModel):
    permissions: Optional[List[GoogleAppsDriveLabelsV2betaLabelPermission]] = Field(
        None, description='Required. Permissions updated.'
    )


class GoogleAppsDriveLabelsV2betaDateLimits(BaseModel):
    maxValue: Optional[GoogleTypeDate] = Field(
        None, description='Maximum value for the date Field type.'
    )
    minValue: Optional[GoogleTypeDate] = Field(
        None, description='Minimum value for the date Field type.'
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableFieldRequest(BaseModel):
    disabledPolicy: Optional[GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy] = (
        Field(None, description='Required. Field Disabled Policy.')
    )
    id: Optional[str] = Field(
        None, description='Required. Key of the Field to disable.'
    )
    updateMask: Optional[str] = Field(
        None,
        description='The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.',
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableSelectionChoiceRequest(
    BaseModel
):
    disabledPolicy: Optional[GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy] = (
        Field(None, description='Required. The disabled policy to update.')
    )
    fieldId: Optional[str] = Field(
        None,
        description='Required. The Selection Field in which a Choice will be disabled.',
    )
    id: Optional[str] = Field(None, description='Required. Choice to disable.')
    updateMask: Optional[str] = Field(
        None,
        description='The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.',
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldPropertiesRequest(
    BaseModel
):
    id: Optional[str] = Field(None, description='Required. The Field to update.')
    properties: Optional[GoogleAppsDriveLabelsV2betaFieldProperties] = Field(
        None, description='Required. Basic Field properties.'
    )
    updateMask: Optional[str] = Field(
        None,
        description='The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.',
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateLabelPropertiesRequest(
    BaseModel
):
    properties: Optional[GoogleAppsDriveLabelsV2betaLabelProperties] = Field(
        None, description='Required. Label properties to update.'
    )
    updateMask: Optional[str] = Field(
        None,
        description='The fields that should be updated. At least one field must be specified. The root `label_properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.',
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseResponse(BaseModel):
    createField: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateFieldResponse
    ] = Field(None, description='Creates a new Field.')
    createSelectionChoice: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateSelectionChoiceResponse
    ] = Field(
        None,
        description='Creates a new selection list option to add to a Selection Field.',
    )
    deleteField: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteFieldResponse
    ] = Field(None, description='Deletes a Field from the label.')
    deleteSelectionChoice: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteSelectionChoiceResponse
    ] = Field(None, description='Deletes a Choice from a Selection Field.')
    disableField: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableFieldResponse
    ] = Field(None, description='Disables Field.')
    disableSelectionChoice: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableSelectionChoiceResponse
    ] = Field(None, description='Disables a Choice within a Selection Field.')
    enableField: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableFieldResponse
    ] = Field(None, description='Enables Field.')
    enableSelectionChoice: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableSelectionChoiceResponse
    ] = Field(None, description='Enables a Choice within a Selection Field.')
    updateField: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldPropertiesResponse
    ] = Field(None, description='Updates basic properties of a Field.')
    updateFieldType: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldTypeResponse
    ] = Field(None, description='Update Field type and/or type options.')
    updateLabel: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateLabelPropertiesResponse
    ] = Field(None, description='Updated basic properties of a Label.')
    updateSelectionChoiceProperties: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse
    ] = Field(None, description='Updates a Choice within a Selection Field.')


class GoogleAppsDriveLabelsV2betaDisableLabelRequest(BaseModel):
    disabledPolicy: Optional[GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy] = (
        Field(None, description='Disabled policy to use.')
    )
    languageCode: Optional[str] = Field(
        None,
        description='The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.',
    )
    updateMask: Optional[str] = Field(
        None,
        description='The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.',
    )
    useAdminAccess: Optional[bool] = Field(
        None,
        description="Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
    )
    writeControl: Optional[GoogleAppsDriveLabelsV2betaWriteControl] = Field(
        None,
        description='Provides control over how write requests are executed. Defaults to unset, which means last write wins.',
    )


class GoogleAppsDriveLabelsV2betaEnableLabelRequest(BaseModel):
    languageCode: Optional[str] = Field(
        None,
        description='The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.',
    )
    useAdminAccess: Optional[bool] = Field(
        None,
        description="Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
    )
    writeControl: Optional[GoogleAppsDriveLabelsV2betaWriteControl] = Field(
        None,
        description='Provides control over how write requests are executed. Defaults to unset, which means last write wins.',
    )


class GoogleAppsDriveLabelsV2betaFieldDateOptions(BaseModel):
    dateFormat: Optional[str] = Field(None, description='Output only. ICU date format.')
    dateFormatType: Optional[DateFormatType] = Field(
        None,
        description='Localized date formatting option. Field values are rendered in this format according to their locale.',
    )
    maxValue: Optional[GoogleTypeDate] = Field(
        None, description='Output only. Maximum valid value (year, month, day).'
    )
    minValue: Optional[GoogleTypeDate] = Field(
        None, description='Output only. Minimum valid value (year, month, day).'
    )


class GoogleAppsDriveLabelsV2betaFieldLimits(BaseModel):
    dateLimits: Optional[GoogleAppsDriveLabelsV2betaDateLimits] = Field(
        None, description='Date Field limits.'
    )
    integerLimits: Optional[GoogleAppsDriveLabelsV2betaIntegerLimits] = Field(
        None, description='Integer Field limits.'
    )
    longTextLimits: Optional[GoogleAppsDriveLabelsV2betaLongTextLimits] = Field(
        None, description='Long text Field limits.'
    )
    maxDescriptionLength: Optional[int] = Field(
        None, description='Limits for Field description, also called help text.'
    )
    maxDisplayNameLength: Optional[int] = Field(
        None, description='Limits for Field title.'
    )
    maxIdLength: Optional[int] = Field(None, description='Max length for the id.')
    selectionLimits: Optional[GoogleAppsDriveLabelsV2betaSelectionLimits] = Field(
        None, description='Selection Field limits.'
    )
    textLimits: Optional[GoogleAppsDriveLabelsV2betaTextLimits] = Field(
        None,
        description='The relevant limits for the specified Field.Type. Text Field limits.',
    )
    userLimits: Optional[GoogleAppsDriveLabelsV2betaUserLimits] = Field(
        None, description='User Field limits.'
    )


class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints(BaseModel):
    badgeColors: Optional[GoogleAppsDriveLabelsV2betaBadgeColors] = Field(
        None,
        description='The colors to use for the badge. Changed to Google Material colors based on the chosen `properties.badge_config.color`.',
    )
    badgePriority: Optional[str] = Field(
        None,
        description='The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority.',
    )
    darkBadgeColors: Optional[GoogleAppsDriveLabelsV2betaBadgeColors] = Field(
        None,
        description='The dark-mode color to use for the badge. Changed to Google Material colors based on the chosen `properties.badge_config.color`.',
    )
    disabled: Optional[bool] = Field(
        None, description='Whether the option should be shown in the UI as disabled.'
    )
    hiddenInSearch: Optional[bool] = Field(
        None,
        description='This option should be hidden in the search menu when searching for Drive items.',
    )
    shownInApply: Optional[bool] = Field(
        None,
        description='This option should be shown in the apply menu when applying values to a Drive item.',
    )


class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties(BaseModel):
    badgeConfig: Optional[GoogleAppsDriveLabelsV2betaBadgeConfig] = Field(
        None,
        description='The badge configuration for this choice. When set, the label that owns this choice is considered a "badged label".',
    )
    description: Optional[str] = Field(
        None, description='The description of this label.'
    )
    displayName: Optional[str] = Field(
        None,
        description='Required. The display text to show in the UI identifying this field.',
    )
    insertBeforeChoice: Optional[str] = Field(
        None,
        description='Input only. Insert or move this choice before the indicated choice. If empty, the choice is placed at the end of the list.',
    )


class GoogleAppsDriveLabelsV2betaLabelLimits(BaseModel):
    fieldLimits: Optional[GoogleAppsDriveLabelsV2betaFieldLimits] = Field(
        None, description='The limits for Fields.'
    )
    maxDeletedFields: Optional[int] = Field(
        None, description='The maximum number of published Fields that can be deleted.'
    )
    maxDescriptionLength: Optional[int] = Field(
        None,
        description='The maximum number of characters allowed for the description.',
    )
    maxDraftRevisions: Optional[int] = Field(
        None,
        description='The maximum number of draft revisions that will be kept before deleting old drafts.',
    )
    maxFields: Optional[int] = Field(
        None, description='The maximum number of Fields allowed within the label.'
    )
    maxTitleLength: Optional[int] = Field(
        None, description='The maximum number of characters allowed for the title.'
    )
    name: Optional[str] = Field(None, description='Resource name.')


class GoogleAppsDriveLabelsV2betaLabelLock(BaseModel):
    capabilities: Optional[GoogleAppsDriveLabelsV2betaLabelLockCapabilities] = Field(
        None, description="Output only. The user's capabilities on this LabelLock."
    )
    choiceId: Optional[str] = Field(
        None,
        description='The ID of the Selection Field Choice that should be locked. If present, `field_id` must also be present.',
    )
    createTime: Optional[str] = Field(
        None, description='Output only. The time this LabelLock was created.'
    )
    creator: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None,
        description='Output only. The user whose credentials were used to create the LabelLock. This will not be present if no user was responsible for creating the LabelLock.',
    )
    deleteTime: Optional[str] = Field(
        None,
        description='Output only. A timestamp indicating when this LabelLock was scheduled for deletion. This will be present only if this LabelLock is in the DELETING state.',
    )
    fieldId: Optional[str] = Field(
        None,
        description='The ID of the Field that should be locked. Empty if the whole Label should be locked.',
    )
    name: Optional[str] = Field(
        None, description='Output only. Resource name of this LabelLock.'
    )
    state: Optional[State] = Field(
        None, description="Output only. This LabelLock's state."
    )


class GoogleAppsDriveLabelsV2betaLifecycle(BaseModel):
    disabledPolicy: Optional[GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy] = (
        Field(
            None,
            description='The policy that governs how to show a disabled label, field, or selection choice.',
        )
    )
    hasUnpublishedChanges: Optional[bool] = Field(
        None,
        description='Output only. Whether the object associated with this lifecycle has unpublished changes.',
    )
    state: Optional[State1] = Field(
        None,
        description='Output only. The state of the object associated with this lifecycle.',
    )


class GoogleAppsDriveLabelsV2betaListLabelLocksResponse(BaseModel):
    labelLocks: Optional[List[GoogleAppsDriveLabelsV2betaLabelLock]] = Field(
        None, description='LabelLocks.'
    )
    nextPageToken: Optional[str] = Field(
        None, description='The token of the next page in the response.'
    )


class GoogleAppsDriveLabelsV2betaPublishLabelRequest(BaseModel):
    languageCode: Optional[str] = Field(
        None,
        description='The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.',
    )
    useAdminAccess: Optional[bool] = Field(
        None,
        description="Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
    )
    writeControl: Optional[GoogleAppsDriveLabelsV2betaWriteControl] = Field(
        None,
        description='Provides control over how write requests are executed. Defaults to unset, which means last write wins.',
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest(
    BaseModel
):
    fieldId: Optional[str] = Field(
        None, description='Required. The Selection Field to update.'
    )
    id: Optional[str] = Field(None, description='Required. The Choice to update.')
    properties: Optional[
        GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties
    ] = Field(None, description='Required. The Choice properties to update.')
    updateMask: Optional[str] = Field(
        None,
        description='The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.',
    )


class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice(BaseModel):
    appliedCapabilities: Optional[
        GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities
    ] = Field(
        None,
        description='Output only. The capabilities related to this choice on applied metadata.',
    )
    createTime: Optional[str] = Field(
        None, description='Output only. The time this choice was created.'
    )
    creator: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None, description='Output only. The user who created this choice.'
    )
    disableTime: Optional[str] = Field(
        None,
        description='Output only. The time this choice was disabled. This value has no meaning when the choice is not disabled.',
    )
    disabler: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None,
        description='Output only. The user who disabled this choice. This value has no meaning when the option is not disabled.',
    )
    displayHints: Optional[
        GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints
    ] = Field(None, description='Output only. UI display hints for rendering a choice.')
    id: Optional[str] = Field(
        None,
        description='The unique value of the choice. This ID is autogenerated. Matches the regex: `([a-zA-Z0-9_])+`.',
    )
    lifecycle: Optional[GoogleAppsDriveLabelsV2betaLifecycle] = Field(
        None, description='Output only. Lifecycle of the choice.'
    )
    lockStatus: Optional[GoogleAppsDriveLabelsV2betaLockStatus] = Field(
        None, description='Output only. The LockStatus of this choice.'
    )
    properties: Optional[
        GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties
    ] = Field(None, description='Basic properties of the choice.')
    publishTime: Optional[str] = Field(
        None,
        description='Output only. The time this choice was published. This value has no meaning when the choice is not published.',
    )
    publisher: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None,
        description='Output only. The user who published this choice. This value has no meaning when the choice is not published.',
    )
    schemaCapabilities: Optional[
        GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities
    ] = Field(
        None,
        description='Output only. The capabilities related to this option when editing the option.',
    )
    updateTime: Optional[str] = Field(
        None, description='Output only. The time this choice was updated last.'
    )
    updater: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None, description='Output only. The user who updated this choice last.'
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateSelectionChoiceRequest(
    BaseModel
):
    choice: Optional[GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice] = Field(
        None, description='Required. The Choice to create.'
    )
    fieldId: Optional[str] = Field(
        None,
        description='Required. The Selection Field in which a Choice will be created.',
    )


class GoogleAppsDriveLabelsV2betaFieldSelectionOptions(BaseModel):
    choices: Optional[List[GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice]] = (
        Field(
            None,
            description='The options available for this selection field. The list order is consistent, and modified with `insert_before_choice`.',
        )
    )
    listOptions: Optional[GoogleAppsDriveLabelsV2betaFieldListOptions] = Field(
        None,
        description='When specified, indicates this field supports a list of values. Once the field is published, this cannot be changed.',
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldTypeRequest(
    BaseModel
):
    dateOptions: Optional[GoogleAppsDriveLabelsV2betaFieldDateOptions] = Field(
        None, description='Update field to Date.'
    )
    id: Optional[str] = Field(None, description='Required. The Field to update.')
    integerOptions: Optional[GoogleAppsDriveLabelsV2betaFieldIntegerOptions] = Field(
        None, description='Update field to Integer.'
    )
    longTextOptions: Optional[GoogleAppsDriveLabelsV2betaFieldLongTextOptions] = Field(
        None, description='Update field to Long Text.'
    )
    selectionOptions: Optional[GoogleAppsDriveLabelsV2betaFieldSelectionOptions] = (
        Field(None, description='Update field to Selection.')
    )
    textOptions: Optional[GoogleAppsDriveLabelsV2betaFieldTextOptions] = Field(
        None, description='Update field to Text.'
    )
    updateMask: Optional[str] = Field(
        None,
        description='The fields that should be updated. At least one field must be specified. The root of `type_options` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.',
    )
    userOptions: Optional[GoogleAppsDriveLabelsV2betaFieldUserOptions] = Field(
        None, description='Update field to User.'
    )


class GoogleAppsDriveLabelsV2betaField(BaseModel):
    appliedCapabilities: Optional[
        GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities
    ] = Field(
        None,
        description='Output only. The capabilities this user has on this field and its value when the label is applied on Drive items.',
    )
    createTime: Optional[str] = Field(
        None, description='Output only. The time this field was created.'
    )
    creator: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None, description='Output only. The user who created this field.'
    )
    dateOptions: Optional[GoogleAppsDriveLabelsV2betaFieldDateOptions] = Field(
        None, description='Date field options.'
    )
    disableTime: Optional[str] = Field(
        None,
        description='Output only. The time this field was disabled. This value has no meaning when the field is not disabled.',
    )
    disabler: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None,
        description='Output only. The user who disabled this field. This value has no meaning when the field is not disabled.',
    )
    displayHints: Optional[GoogleAppsDriveLabelsV2betaFieldDisplayHints] = Field(
        None, description='Output only. UI display hints for rendering a field.'
    )
    id: Optional[str] = Field(
        None,
        description='Output only. The key of a field, unique within a label or library. This value is autogenerated. Matches the regex: `([a-zA-Z0-9])+`',
    )
    integerOptions: Optional[GoogleAppsDriveLabelsV2betaFieldIntegerOptions] = Field(
        None, description='Integer field options.'
    )
    lifecycle: Optional[GoogleAppsDriveLabelsV2betaLifecycle] = Field(
        None, description='Output only. The lifecycle of this field.'
    )
    lockStatus: Optional[GoogleAppsDriveLabelsV2betaLockStatus] = Field(
        None, description='Output only. The LockStatus of this field.'
    )
    properties: Optional[GoogleAppsDriveLabelsV2betaFieldProperties] = Field(
        None, description='The basic properties of the field.'
    )
    publisher: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None,
        description='Output only. The user who published this field. This value has no meaning when the field is not published.',
    )
    queryKey: Optional[str] = Field(
        None,
        description='Output only. The key to use when constructing Drive search queries to find files based on values defined for this field on files. For example, "`{query_key}` > 2001-01-01".',
    )
    schemaCapabilities: Optional[GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities] = (
        Field(
            None,
            description='Output only. The capabilities this user has when editing this field.',
        )
    )
    selectionOptions: Optional[GoogleAppsDriveLabelsV2betaFieldSelectionOptions] = (
        Field(None, description='Selection field options.')
    )
    textOptions: Optional[GoogleAppsDriveLabelsV2betaFieldTextOptions] = Field(
        None, description='Text field options.'
    )
    updateTime: Optional[str] = Field(
        None, description='Output only. The time this field was updated.'
    )
    updater: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None, description='Output only. The user who modified this field.'
    )
    userOptions: Optional[GoogleAppsDriveLabelsV2betaFieldUserOptions] = Field(
        None, description='User field options.'
    )


class GoogleAppsDriveLabelsV2betaLabel(BaseModel):
    appliedCapabilities: Optional[
        GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities
    ] = Field(
        None,
        description='Output only. The capabilities related to this label on applied metadata.',
    )
    appliedLabelPolicy: Optional[GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy] = (
        Field(
            None,
            description="Output only. Behavior of this label when it's applied to Drive items.",
        )
    )
    createTime: Optional[str] = Field(
        None, description='Output only. The time this label was created.'
    )
    creator: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None, description='Output only. The user who created this label.'
    )
    customer: Optional[str] = Field(
        None,
        description='Output only. The customer this label belongs to. For example: "customers/123abc789."',
    )
    disableTime: Optional[str] = Field(
        None,
        description='Output only. The time this label was disabled. This value has no meaning when the label is not disabled.',
    )
    disabler: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None,
        description='Output only. The user who disabled this label. This value has no meaning when the label is not disabled.',
    )
    displayHints: Optional[GoogleAppsDriveLabelsV2betaLabelDisplayHints] = Field(
        None, description='Output only. UI display hints for rendering the label.'
    )
    fields: Optional[List[GoogleAppsDriveLabelsV2betaField]] = Field(
        None, description='List of fields in descending priority order.'
    )
    id: Optional[str] = Field(
        None,
        description='Output only. Globally unique identifier of this label. ID makes up part of the label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex: `([a-zA-Z0-9])+`',
    )
    labelType: Optional[LabelType] = Field(
        None, description='Required. The type of label.'
    )
    learnMoreUri: Optional[str] = Field(
        None,
        description='Custom URL to present to users to allow them to learn more about this label and how it should be used.',
    )
    lifecycle: Optional[GoogleAppsDriveLabelsV2betaLifecycle] = Field(
        None,
        description="Output only. The lifecycle state of the label including whether it's published, deprecated, and has draft changes.",
    )
    lockStatus: Optional[GoogleAppsDriveLabelsV2betaLockStatus] = Field(
        None, description='Output only. The LockStatus of this label.'
    )
    name: Optional[str] = Field(
        None,
        description='Output only. Resource name of the label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below.',
    )
    properties: Optional[GoogleAppsDriveLabelsV2betaLabelProperties] = Field(
        None, description='Required. The basic properties of the label.'
    )
    publishTime: Optional[str] = Field(
        None,
        description='Output only. The time this label was published. This value has no meaning when the label is not published.',
    )
    publisher: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None,
        description='Output only. The user who published this label. This value has no meaning when the label is not published.',
    )
    revisionCreateTime: Optional[str] = Field(
        None, description='Output only. The time this label revision was created.'
    )
    revisionCreator: Optional[GoogleAppsDriveLabelsV2betaUserInfo] = Field(
        None, description='Output only. The user who created this label revision.'
    )
    revisionId: Optional[str] = Field(
        None,
        description='Output only. Revision ID of the label. Revision ID might be part of the label `name` depending on the request issued. A new revision is created whenever revisioned properties of a label are changed. Matches the regex: `([a-zA-Z0-9])+`',
    )
    schemaCapabilities: Optional[GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities] = (
        Field(
            None,
            description='Output only. The capabilities the user has on this label.',
        )
    )


class GoogleAppsDriveLabelsV2betaListLabelsResponse(BaseModel):
    labels: Optional[List[GoogleAppsDriveLabelsV2betaLabel]] = Field(
        None, description='Labels.'
    )
    nextPageToken: Optional[str] = Field(
        None, description='The token of the next page in the response.'
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateFieldRequest(BaseModel):
    field: Optional[GoogleAppsDriveLabelsV2betaField] = Field(
        None, description='Required. Field to create.'
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestRequest(BaseModel):
    createField: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateFieldRequest
    ] = Field(None, description='Creates a new Field.')
    createSelectionChoice: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateSelectionChoiceRequest
    ] = Field(None, description='Creates Choice within a Selection field.')
    deleteField: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteFieldRequest
    ] = Field(None, description='Deletes a Field from the label.')
    deleteSelectionChoice: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteSelectionChoiceRequest
    ] = Field(None, description='Delete a Choice within a Selection Field.')
    disableField: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableFieldRequest
    ] = Field(None, description='Disables the Field.')
    disableSelectionChoice: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableSelectionChoiceRequest
    ] = Field(None, description='Disable a Choice within a Selection Field.')
    enableField: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableFieldRequest
    ] = Field(None, description='Enables the Field.')
    enableSelectionChoice: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableSelectionChoiceRequest
    ] = Field(None, description='Enable a Choice within a Selection Field.')
    updateField: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldPropertiesRequest
    ] = Field(None, description='Updates basic properties of a Field.')
    updateFieldType: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldTypeRequest
    ] = Field(None, description='Update Field type and/or type options.')
    updateLabel: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateLabelPropertiesRequest
    ] = Field(None, description='Updates the Label properties.')
    updateSelectionChoiceProperties: Optional[
        GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest
    ] = Field(None, description='Update a Choice properties within a Selection Field.')


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse(BaseModel):
    responses: Optional[
        List[GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseResponse]
    ] = Field(
        None,
        description='The reply of the updates. This maps 1:1 with the updates, although responses to some requests may be empty.',
    )
    updatedLabel: Optional[GoogleAppsDriveLabelsV2betaLabel] = Field(
        None,
        description='The label after updates were applied. This is only set if [BatchUpdateLabelResponse2.include_label_in_response] is `true` and there were no errors.',
    )


class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest(BaseModel):
    languageCode: Optional[str] = Field(
        None,
        description='The BCP-47 language code to use for evaluating localized Field labels when `include_label_in_response` is `true`.',
    )
    requests: Optional[
        List[GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestRequest]
    ] = Field(
        None,
        description='A list of updates to apply to the Label. Requests will be applied in the order they are specified.',
    )
    useAdminAccess: Optional[bool] = Field(
        None,
        description="Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
    )
    view: Optional[View] = Field(
        None,
        description='When specified, only certain fields belonging to the indicated view will be returned.',
    )
    writeControl: Optional[GoogleAppsDriveLabelsV2betaWriteControl] = Field(
        None, description='Provides control over how write requests are executed.'
    )
